<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core">

    <ui:composition template="./template.xhtml">
            <ui:define name="title">
                 <h:outputText value="#{msg['table.title']}" escape="false"/>
            </ui:define>   
            <ui:define name="navigation">
                <li>
                    <h:commandLink value="#{msg['navi.newGame']}" action="#{gameController.resetGame()}" id="table" tabindex="1"/>
                </li>
                <li><h:commandLink value="#{msg['navi.logout']}" action="#{userController.logout()}" id="index" tabindex="2"/></li>
            </ui:define>
            <ui:define name="content">
                <div id="main-area">
                    <div class="info">
                        <h:outputText value="#{msg['table.gameInfo']}" escape="false"/>
                        <h:panelGrid id="gameInformation" columns="2"  summary="#{msg['table.infoGameHeader']}">
                            <h:outputLabel value="#{msg['table.infoGame.leading']}" 
                                           for="leading" class="label" />
                            <h:outputText id="leading" class="data" value="#{gameController.game.leader.name}" />

                            <h:outputLabel value="#{msg['table.infoGame.round']}" 
                                           for="round" class="label" />
                            <h:outputText id="round" class="data" value="#{gameController.game.round}" />

                            <h:outputLabel value="#{msg['table.infoGame.time']}" 
                                           for="time" class="label" />
                            <h:outputText id="time" class="data" value="#{gameController.game.spentTime}" />

                            <h:outputLabel value="#{msg['table.infoGame.diceRoll']}" 
                                           for="diceRoll" class="label" />
                            <h:outputText id="diceRoll" class="data" value="#{gameController.game.computer.dice.lastRoll}" />

                            <!-- Hidden fields !-->
                            <h:outputText style="display: none" value="hiddenInformation" />
                            <h:outputText style="display: none" id="humanExpectedPosition" value="#{gameController.game.player.expectedPosition}" />
                            <h:outputText style="display: none" id="humanPosition" value="#{gameController.game.player.position}" />
                            <h:outputText style="display: none" id="computerExpectedPosition" value="#{gameController.game.computer.expectedPosition}" />
                            <h:outputText style="display: none" id="computerPosition" value="#{gameController.game.computer.position}" />
                            <h:outputText style="display: none" id="gameOver" value="#{gameController.game.gameOver}" />
                        </h:panelGrid>
                        <h:outputText value="#{msg['table.player']}" escape="false"/>
                        <h:panelGrid id="playerInformation" columns="2" summary="#{msg['table.infoNameHeader']}" headerClass="label">
                            <h:outputLabel value="#{msg['table.infoName.player1']}" 
                                           for="player1Name" class="label" />
                            <h:outputText id="player1Name" class="data" value="#{gameController.game.player.name}" />

                            <h:outputLabel value="#{msg['table.infoName.player2']}" 
                                           for="player2Name" class="label" />
                            <h:outputText id="player2Name" class="data" value="#{gameController.game.computer.name}" />
                        </h:panelGrid> 	  
                    </div>
                    <div id="field" class="field">
                        <h2 class="accessibility">#{msg['table.accessabilityGameArea']}</h2>
                        <ol id="road">
                            <li id="start_road">
                                <span class="accessibility">#{msg['table.accessabilityStartField']}</span>
                                <span id="player1">
                                    <span class="accessibility"><em>#{msg['table.accessabilityPlayer1']}</em></span>
                                </span>
                                <span id="player2">
                                    <span class="accessibility"><em>#{msg['table.accessabilityPlayer2']}</em></span>
                                </span>
                            </li>
                            <li class="empty_road" id="road_1">
                                <span class="accessibility">#{msg['table.accessabilityGameField2']}</span>
                            </li>
                            <li class="oil_road" id="road_2">
                                <span class="accessibility">#{msg['table.accessabilityGameField3']}</span>
                            </li>
                            <li class="empty_road" id="road_3">
                                <span class="accessibility">#{msg['table.accessabilityGameField4']}</span>
                            </li>
                            <li class="empty_road" id="road_4">
                                <span class="accessibility">#{msg['table.accessabilityGameField5']}</span>
                            </li>
                            <li class="oil_road" id="road_5">
                                <span class="accessibility">#{msg['table.accessabilityGameField6']}</span>
                            </li>
                            <li id="finish_road">
                                <span class="accessibility">#{msg['table.accessabilityFinishLine']}</span>
                            </li>
                        </ol>
                    </div>
                    <div id="player" class="player">
                        <h2 class="accessibility">#{msg['table.accessabilityDiceArea']}</h2>
                        <span class="accessibility">#{msg['table.accessabilityItsTurnFor']}</span><div id="currentPlayerName">#{gameController.game.player.name}</div>
                        <h:form id="diceForm">
                            <h:commandButton id="dice" type="image" 
                                             tabindex="4" 
                                             image="#{resource[gameController.game.player.dice.diceImage]}" 
                                             title="#{msg[gameController.game.player.dice.diceTitle]}" 
                                             alt="#{msg[gameController.game.player.dice.diceDescription]}"
                                             value="Roll the Dice">
                                <f:ajax listener="#{gameController.game.rollDice()}" render=":diceForm :gameInformation :playerInformation" onevent="updateGame"/>
                            </h:commandButton>
                        </h:form>
                    </div>
                </div>
            </ui:define>
            <ui:define name="js">
                <script type="text/javascript">
                    //<![CDATA[

                    getDivId = function(num) {
                        if (num <= 0) {
                            return "#start_road";
                        }
                        if (num >= 6) {
                            return "#finish_road";
                        }
                        return "#road_" + num;
                    };
                    // call this function once before starting the animations
                    function prepareAnimation() {
                        $("#animationDone").remove();
                    }

                    // call this function once after all animations have finished
                    function completeAnimation() {
                        var div = $(document.createElement('div'));
                        div.attr('id', 'animationDone');
                        div.addClass('hide');
                        $("body").append(div);
                    }

                    //This Function gets called when the page gets reloaded
                    //data contains the information in which status ajax is
                    function updateGame(data) {
                        var speed = 700;
                        //load functions

                        function driveHuman() {
                            console.log("humanExpectedPosition: " + humanExpectedPosition + ", humanPosition: " + humanPosition);
                            $("#player1").fadeOut(speed, function() {
                                $("#player1").appendTo(humanExpectedPosition);
                                console.log("Fading to expectedPosition");
                                $("#player1").fadeIn(speed, checkHumanOnOilSpill);
                            });
                        }

                        function checkHumanOnOilSpill() {
                            if (humanExpectedPosition.toString() !== humanPosition.toString()) {
                                console.log("Player hit oil Spill");
                                $("#player1").fadeOut(speed, function() {
                                    $("#player1").appendTo(humanPosition);
                                    $("#player1").fadeIn(speed, driveComputer());
                                });
                            } else {
                                driveComputer();
                            }
                        }

                        function driveComputer() {
                            console.log("computerExpectedPosition: " + computerExpectedPosition + ", computerPosition: " + computerPosition);
                            $("#player2").fadeOut(speed, function() {
                                $("#player2").appendTo(computerExpectedPosition);
                                $("#player2").fadeIn(speed, checkComputerOnOilSpill);
                            });
                        }

                        function checkComputerOnOilSpill() {
                            if (computerExpectedPosition.toString() !== computerPosition.toString()) {
                                console.log("Computer on Oil Spill");
                                $("#player2").fadeOut(speed, function() {
                                    $("#player2").appendTo(computerPosition);
                                    $("#player2").fadeIn(speed, completeAnimation());
                                });
                            } else {
                                completeAnimation();
                            }
                        }
                        if (data.status === "success") {
                            //If it is not the first round
                            if ($("#round").text() !== 0) {
                                prepareAnimation();

                                var humanExpectedPosition = getDivId($("#humanExpectedPosition").text());
                                var humanPosition = getDivId($("#humanPosition").text());
                                var computerExpectedPosition = getDivId($("#computerExpectedPosition").text());
                                var computerPosition = getDivId($("#computerPosition").text());
                                console.log("Refreshing GameInformation")
                                driveHuman();

                            }
                        }
                    }
                    //TODO load on startup

                    //]]>
                </script>
            </ui:define>
    </ui:composition>
</html>